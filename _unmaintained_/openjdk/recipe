pkg=openjdk
ju=77; jb=03; jv=jdk8u$ju-b$jb
ver=8u${ju}b${jb}
rel=1
sum="OpenJDK Java 8 development kit"
lic=custom
url=http://openjdk.java.net
dep=(alsa-lib cpio ca-certificates giflib nss xdg-utils hicolor-icon-theme zlib)
mkd=(unzip zip libxtst cups libxrender fontconfig openjdk)
src=(jdk8u-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/archive/$jv.tar.gz
     corba-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/corba/archive/$jv.tar.gz
     hotspot-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/hotspot/archive/$jv.tar.gz
     jdk-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/archive/$jv.tar.gz
     jaxws-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jaxws/archive/$jv.tar.gz
     jaxp-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jaxp/archive/$jv.tar.gz
     langtools-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/langtools/archive/$jv.tar.gz
     nashorn-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/nashorn/archive/$jv.tar.gz)
sha=(4de7ac9e083b577c61b861660e1883c8e3d36024860ac95390fe5113cd51aa85
     8e556b9cb8321a1007894358405365f43a5138e04647436aea2dabd4457a5c11
     166058d86a5f078094f6de2ba534b28837124bcc7688b72c67dc3b6beb41a013
     3c0bcc0afda1f4bb27ae8f15ed5ebaafc7ce90e9d304e3cb53e202ac911a8de5
     240313419da136cac61293ff867568fd4342faff1d66688af66d4fd0d45047c4
     f671cdb170bd50681d1c97051740b69952764d3eda17a5d1523a0a830ab401ab
     40d450dc4a1799a0d913af40b97ad22bd713974f29f2b4bcc4fbfae2c1dc3412
     eab31307c8325823667ed376cee0ebea5cafe90d1bff8eec66457532fddd72a7)

_prefix=$srcdir/jdk8u-$jv/image
_jvmdir=usr/lib/jvm/$pkg
_imgdir=$_prefix/jvm/$pkg-1.8.0_$(printf '%.2d' $ju)

build() {
    cd jdk8u-$jv

    for subrepo in corba hotspot jdk jaxws jaxp langtools nashorn; do
        ln -s ../$subrepo-$jv $subrepo
    done

    unset JAVA_HOME
    export MAKEFLAGS=${MAKEFLAGS/-j*}

    install -d -m 755 $_prefix
    sh configure --prefix="$_prefix" \
                 --with-update-version="$ju" \
                 --with-build-number="b${jb}" \
                 --with-milestone="fcs" \
                 --enable-unlimited-crypto \
                 --with-zlib=system \
                 --with-giflib=system

    make DEBUG_BINARIES=true
    make docs
    make install
}

package() {
    cd jdk8u-$jv

    install -d -m 755 $pkgdir/usr/share/doc/$pkg
    cp -r build/linux-x86_64-normal-server-release/docs/* $pkgdir/usr/share/doc/$pkg

    cd $_imgdir

    # A lot of build stuff were directly taken from
    # http://pkgs.fedoraproject.org/cgit/java-1.8.0-openjdk.git

    # http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=1437
    find . -iname '*.jar' -exec chmod ugo+r {} \;
    chmod ugo+r lib/ct.sym

    find . -iname '*.diz' -exec rm {} \;
    find . -iname '*.debuginfo' -exec rm {} \;

    install -d -m 755 $pkgdir/$_jvmdir
    cp -a include lib $pkgdir/$_jvmdir

    pushd bin
    for b in $(ls | grep -v java-rmi.cgi); do
        if [ -e ../jre/bin/$b ]; then
            ln -s ../jre/bin/$b $pkgdir/$_jvmdir/bin/$b
        else
            install -D -m 755 $b $pkgdir/$_jvmdir/bin/$b
            install -D -m 644 ../man/man1/${b}.1 $pkgdir/usr/share/man/man1/${b}-${pkg}.1
            install -D -m 644 ../man/ja/man1/${b}.1 $pkgdir/usr/share/man/ja/man1/${b}-${pkg}.1
        fi
    done
    popd

    install -D -m 755 bin/java-rmi.cgi $pkgdir/$_jvmdir/bin/java-rmi.cgi

    cd jre
    install -d -m 755 $pkgdir/$_jvmdir/jre
    cp -a bin lib $pkgdir/$_jvmdir/jre

    mv $pkgdir/$_jvmdir/jre/lib/management/jmxremote.password{.template,}
    mv $pkgdir/$_jvmdir/jre/lib/management/snmp.acl{.template,}

    pushd $pkgdir/$_jvmdir/jre/bin
    install -d -m 755 $pkgdir/usr/share/man/{,ja/}man1
    for file in *; do
        install -m 644 $_imgdir/man/man1/${file}.1 \
            $pkgdir/usr/share/man/man1/${file}-${pkg}.1
        install -m 644 $_imgdir/man/ja/man1/${file}.1 \
            $pkgdir/usr/share/man/ja/man1/${file}-${pkg}.1
    done
    popd

    rm -f $pkgdir/$_jvmdir/jre/lib/security/cacerts
    ln -sf /etc/ssl/certs/java/cacerts $pkgdir/$_jvmdir/jre/lib/security/cacerts

     install -d -m 755 ${pkgdir}/usr/share/licenses/${pkg}/
     install -m 644 ASSEMBLY_EXCEPTION LICENSE THIRD_PARTY_README \
          ${pkgdir}/usr/share/licenses/${pkg}

    install -D -m0755 $rcsdir/profile.sh $pkgdir/etc/profile.d/openjdk.sh
}
