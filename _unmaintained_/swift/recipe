pkg=swift
ver=3.0
rel=1
sum="The Swift programming language compiler and tools"
lic=Apache
url=http://swift.org
dep=(python util-linux icu libbsd libedit libxml2 sqlite ncurses)
mkd=(cmake ninja llvm perl pysphinx)
src=(swift-$ver-RELEASE.tar.gz::https://github.com/apple/swift/archive/swift-$ver-RELEASE.tar.gz
     swift-llvm-$ver-RELEASE.tar.gz::https://github.com/apple/swift-llvm/archive/swift-$ver-RELEASE.tar.gz
     swift-clang-$ver-RELEASE.tar.gz::https://github.com/apple/swift-clang/archive/swift-$ver-RELEASE.tar.gz
     swift-lldb-$ver-RELEASE.tar.gz::https://github.com/apple/swift-lldb/archive/swift-$ver-RELEASE.tar.gz
     swift-cmark-$ver-RELEASE.tar.gz::https://github.com/apple/swift-cmark/archive/swift-$ver-RELEASE.tar.gz
     swift-llbuild-$ver-RELEASE.tar.gz::https://github.com/apple/swift-llbuild/archive/swift-$ver-RELEASE.tar.gz
     swift-package-manager-$ver-RELEASE.tar.gz::https://github.com/apple/swift-package-manager/archive/swift-$ver-RELEASE.tar.gz
     swift-corelibs-xctest-$ver-RELEASE.tar.gz::https://github.com/apple/swift-corelibs-xctest/archive/swift-$ver-RELEASE.tar.gz
     swift-corelibs-foundation-$ver-RELEASE.tar.gz::https://github.com/apple/swift-corelibs-foundation/archive/swift-$ver-RELEASE.tar.gz
     swift-corelibs-libdispatch-$ver-RELEASE.tar.gz::https://github.com/apple/swift-corelibs-libdispatch/archive/swift-$ver-RELEASE.tar.gz
     swift-integration-tests-$ver-RELEASE.tar.gz::https://github.com/apple/swift-integration-tests/archive/swift-$ver-RELEASE.tar.gz)
sha=(a278ca9ef489fbab00dc9864a2ac1bd84c8324bba7463ce7e3797debaf8cee84
     30bff4c69fae90a6b3aeb7fef14681c1e291fd57cf695d330adb095eac2718e6
     75027d876a58c42200d2439c2f0e3aa569a98d2c245f609eab0c5d32a6514db4
     d4244307aa18842ba48f93c48aa23184c218641fbdcdd77fa7207765961d3cbc
     c2d4c81ebfc9602091b7b536a54acc1ce7719f23ce4c3866e1bdb8c33a949ab6
     6dd33ec7b513492f8c0aa6f0449ef21799331c43cb7f329225dcdddf17a706d8
     1dc3bac89e096f2a338c19a0599c9448fd04e67d8e9c954790754b924c36b91f
     1f9c170e259ebaf7d0ec623520e7f8f15c8ede85164423e0ca527db3ce4edd9d
     391bd525be98396efcf7845dc88be676db585ead77a823df93fd4f1feea75b1a
     7f2554a218b6571a7d7e15a7101139cd6e672334d18e07b13b20a5d6caf6df52
     2a2072d52c4c361bd946136ccc8db4fbf1d0944f40b67d14a2b1e2ebf4f36709)

build() {
    # Use python2 where appropriate
    find "$srcdir" -type f -print0 | \
        xargs -0 sed -i 's|/usr/bin/env python$|&2|'
    find "$srcdir/swift-lldb-swift-$ver-RELEASE" -name Makefile -print0 | \
        xargs -0 sed -i 's|python-config|python2-config|g'
    sed -i '/^cmake_minimum_required/a set(Python_ADDITIONAL_VERSIONS 2.7)' \
        "$srcdir/swift-swift-$ver-RELEASE/CMakeLists.txt"
    sed -i '/^cmake_minimum_required/a set(Python_ADDITIONAL_VERSIONS 2.7)' \
        "$srcdir/swift-lldb-swift-$ver-RELEASE/CMakeLists.txt"
    sed -i 's/\<python\>/&2/' \
        "$srcdir/swift-swift-$ver-RELEASE/utils/build-script-impl"

    # Use directory names which build-script expects
    for sdir in llvm clang lldb cmark llbuild; do
        ln -sf swift-$sdir-swift-$ver-RELEASE $sdir
    done
    for sdir in corelibs-xctest corelibs-foundation corelibs-libdispatch integration-tests; do
        ln -sf swift-$sdir-swift-$ver-RELEASE swift-$sdir
    done
    ln -sf swift-swift-$ver-RELEASE swift
    ln -sf swift-package-manager-swift-$ver-RELEASE swiftpm

    cd $srcdir/swift

    sed -i -e 's/))]]}/))]}/' utils/build-script-impl

    export SWIFT_SOURCE_ROOT="$srcdir"
    export LDFLAGS='-ldl -lpthread'
    export PATH="$PATH:/usr/bin/core_perl"
    utils/build-script -R \
        --lldb --llbuild --swiftpm --xctest --foundation --libdispatch \
        -j "$(lscpu --parse=CPU | grep -v '^#' | wc -l)"
}

package() {
    cd $srcdir/build/Ninja-ReleaseAssert

    install -dm755 $pkgdir/usr/bin
    install -dm755 $pkgdir/usr/lib/$pkg

    (
        cd swift-linux-$CARCH
        install -m755 bin/swift bin/swift-{demangle,ide-test} $pkgdir/usr/bin
        ln -s swift $pkgdir/usr/bin/swiftc
        ln -s swift $pkgdir/usr/bin/swift-autolink-extract

        install -dm755 $pkgdir/usr/share/man/man1
        install -m644 docs/tools/swift.1 $pkgdir/usr/share/man/man1

        umask 0022
        cp -rL lib/swift/{clang,linux,shims} $pkgdir/usr/lib/$pkg/
    )
    (
        cd llbuild-linux-$CARCH
        install -m755 bin/swift-build-tool $pkgdir/usr/bin
    )
    (
        cd swiftpm-linux-$CARCH
        install -m755 debug/swift-{build,test,package} $pkgdir/usr/bin

        install -dm755 $pkgdir/usr/lib/$pkg/pm
        install -m755 lib/swift/pm/libPackageDescription.so $pkgdir/usr/lib/$pkg/pm
        install -m644 lib/swift/pm/PackageDescription.swiftmodule $pkgdir/usr/lib/$pkg/pm
    )
    (
        cd xctest-linux-$CARCH
        install -m755 libXCTest.so $pkgdir/usr/lib/$pkg/linux/
        install -m644 XCTest.swiftdoc $pkgdir/usr/lib/$pkg/linux/$CARCH
        install -m644 XCTest.swiftmodule $pkgdir/usr/lib/$pkg/linux/$CARCH
    )
    (
        cd foundation-linux-$CARCH
        install -m755 Foundation/libFoundation.so $pkgdir/usr/lib/$pkg/linux/
        install -m644 Foundation/Foundation.swiftdoc $pkgdir/usr/lib/$pkg/linux/$CARCH
        install -m644 Foundation/Foundation.swiftmodule $pkgdir/usr/lib/$pkg/linux/$CARCH

        umask 0022
        cp -r Foundation/usr/lib/$pkg/CoreFoundation $pkgdir/usr/lib/$pkg/
    )
    (
        cd libdispatch-linux-$CARCH
        make install DESTDIR=$pkgdir
    )

    (
        cd lldb-linux-$CARCH
        DESTDIR=$pkgdir ninja install
    )

    install -dm755 $pkgdir/usr/share/licenses/$pkg
    install -m644 $srcdir/swift/LICENSE.txt $pkgdir/usr/share/licenses/$pkg
}
