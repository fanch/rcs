pkg=openjdk
ju=102; jb=14; jv=jdk8u$ju-b$jb
ver=8u${ju}b${jb}
rel=1
sum="OpenJDK Java 8 development kit"
lic=custom
url=http://openjdk.java.net
dep=(alsa-lib cpio ca-certificates giflib nss xdg-utils hicolor-icon-theme zlib)
mkd=(unzip zip libxtst cups libxrender fontconfig openjdk)
src=(jdk8u-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/archive/$jv.tar.gz
     corba-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/corba/archive/$jv.tar.gz
     hotspot-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/hotspot/archive/$jv.tar.gz
     jdk-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/archive/$jv.tar.gz
     jaxws-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jaxws/archive/$jv.tar.gz
     jaxp-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/jaxp/archive/$jv.tar.gz
     langtools-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/langtools/archive/$jv.tar.gz
     nashorn-$jv.tar.gz::http://hg.openjdk.java.net/jdk8u/jdk8u/nashorn/archive/$jv.tar.gz)
sha=(d4161e41122de3526cfe4ca4d568e79b5843e833640752fa6ba2126f6372ed96
     ae51aaf7b6116ca11b79985f94af4b1cfed4675db6ee848904ddfc70b0ed0376
     147e90989a6b1f8e8f7f808b082ec90ca8d79d25fe31db1a5ae04882a71bec0a
     bcf2490447164dee2c99a7f41958fd924a4f8542bc25099d4d268333bc04de61
     de8e8420dc02abbd6b06c6181776e23a38a053355955a8aac7a3cfcc2e733740
     bcff4bd5686c346e3fa676d0592e1e5b3b349f7f61636e702e999c00f940b066
     5cad411081130829799440f155d4f70eb3178a7a603af68202a2f6ac19d40324
     37050fe0525c45412f312fe88606e3c6b8cd02c0919b7695a1b94eff5dba8a42)

_prefix=$srcdir/jdk8u-$jv/image
_jvmdir=usr/lib/jvm/$pkg
_imgdir=$_prefix/jvm/$pkg-1.8.0_$(printf '%.2d' $ju)

build() {
    cd jdk8u-$jv

    for subrepo in corba hotspot jdk jaxws jaxp langtools nashorn; do
        ln -s ../$subrepo-$jv $subrepo
    done

    patch -p1 < $rcsdir/build_with_gcc6.patch

    unset JAVA_HOME
    export MAKEFLAGS=${MAKEFLAGS/-j*}

    install -d -m 755 $_prefix
    sh configure --prefix="$_prefix" \
                 --with-update-version="$ju" \
                 --with-build-number="b${jb}" \
                 --with-milestone="fcs" \
                 --enable-unlimited-crypto \
                 --with-zlib=system \
                 --with-giflib=system

    make DEBUG_BINARIES=true
    make docs
    make install
}

package() {
    cd jdk8u-$jv

    install -d -m 755 $pkgdir/usr/share/doc/$pkg
    cp -r build/linux-x86_64-normal-server-release/docs/* $pkgdir/usr/share/doc/$pkg

    cd $_imgdir

    # A lot of build stuff were directly taken from
    # http://pkgs.fedoraproject.org/cgit/java-1.8.0-openjdk.git

    # http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=1437
    find . -iname '*.jar' -exec chmod ugo+r {} \;
    chmod ugo+r lib/ct.sym

    find . -iname '*.diz' -exec rm {} \;
    find . -iname '*.debuginfo' -exec rm {} \;

    install -d -m 755 $pkgdir/$_jvmdir
    cp -a include lib $pkgdir/$_jvmdir

    pushd bin
    for b in $(ls | grep -v java-rmi.cgi); do
        if [ -e ../jre/bin/$b ]; then
            ln -s ../jre/bin/$b $pkgdir/$_jvmdir/bin/$b
        else
            install -D -m 755 $b $pkgdir/$_jvmdir/bin/$b
            install -D -m 644 ../man/man1/${b}.1 $pkgdir/usr/share/man/man1/${b}-${pkg}.1
            install -D -m 644 ../man/ja/man1/${b}.1 $pkgdir/usr/share/man/ja/man1/${b}-${pkg}.1
        fi
    done
    popd

    install -D -m 755 bin/java-rmi.cgi $pkgdir/$_jvmdir/bin/java-rmi.cgi

    cd jre
    install -d -m 755 $pkgdir/$_jvmdir/jre
    cp -a bin lib $pkgdir/$_jvmdir/jre

    mv $pkgdir/$_jvmdir/jre/lib/management/jmxremote.password{.template,}
    mv $pkgdir/$_jvmdir/jre/lib/management/snmp.acl{.template,}

    pushd $pkgdir/$_jvmdir/jre/bin
    install -d -m 755 $pkgdir/usr/share/man/{,ja/}man1
    for file in *; do
        install -m 644 $_imgdir/man/man1/${file}.1 \
            $pkgdir/usr/share/man/man1/${file}-${pkg}.1
        install -m 644 $_imgdir/man/ja/man1/${file}.1 \
            $pkgdir/usr/share/man/ja/man1/${file}-${pkg}.1
    done
    popd

    rm -f $pkgdir/$_jvmdir/jre/lib/security/cacerts
    ln -sf /etc/ssl/certs/java/cacerts $pkgdir/$_jvmdir/jre/lib/security/cacerts

     install -d -m 755 ${pkgdir}/usr/share/licenses/${pkg}/
     install -m 644 ASSEMBLY_EXCEPTION LICENSE THIRD_PARTY_README \
          ${pkgdir}/usr/share/licenses/${pkg}

    install -D -m0755 $rcsdir/profile.sh $pkgdir/etc/profile.d/openjdk.sh
}
